@use "@scss/common" as *;

.button {
  @include button-reset;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  flex-shrink: 0;
  will-change: background-color, border-color, color;
  transition: all var(--default-trans-time) linear;

  &:hover {
    &:local() {
      .arrowWrapper {
        transform: translate3d(5px, 0, 0);
        @include mid-break {
          transform: translate3d(0, 0, 0);
        }
      }
    }
  }
}

.contents {
  z-index: 1; // need to push above the ::after
  font-weight: normal;
  display: inline-flex;
  align-items: center;
  width: 100%;
  height: 100%;
}

.arrowWrapper {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  transition: all var(--default-trans-time) linear;
}

.iconBefore {
  margin-right: base(0.25);
}

.iconAfter {
  margin-left: base(0.25);
}

// .type---text {
// }

.type--primaryButton,
.type--secondaryButton {
  overflow: hidden;
  position: relative;

  &::after {
    content: "";
    will-change: transform;
    position: absolute;
    left: -1px;
    top: -1px;
    width: calc(100% + 2px);
    height: calc(100% + 2px);
    transform: translate3d(0, 100%, 0);
    transition: transform linear var(--default-trans-time);
  }

  &:local() {
    .contents {
      padding: base(0.5) base(1);
    }
  }
}

.type--secondaryButton {
  background-color: transparent;
  border: var(--stroke-width) solid currentColor;
}

.size--small {
  @include small;
  &:local() {
    &.type--primaryButton,
    &.type--secondaryButton {
      &:local() {
        .contents {
          padding: base(0.25) base(0.5);
        }
      }
    }
  }
}

.white {
  &:local() {
    &.type--primaryButton {
      color: var(--color-dark-gray);
      background-color: var(--color-white);

      &::after {
        background-color: var(--color-gray);
      }

      &:hover {
        &::after {
          transform: translate3d(0, 0, 0);
        }

        @include mid-break {
          // cancel all on mobile
          background-color: var(--color-white);
          &::after {
            transform: translate3d(0, 100%, 0);
          }
        }
      }
    }

    &.type--secondaryButton {
      color: var(--color-white);
      border: var(--stroke-width) solid currentColor;

      &::after {
        background-color: var(--color-white);
      }

      &:hover {
        color: var(--color-dark-gray);
        border-color: var(--color-white);

        &::after {
          transform: translate3d(0, 0, 0);
        }

        @include mid-break {
          // cancel all on mobile
          color: var(--color-white);
          &::after {
            transform: translate3d(0, 100%, 0);
          }
        }
      }
    }

    &.type--text {
      color: var(--color-white);

      &:hover {
        color: var(--color-light-gray);
        @include mid-break {
          color: var(--color-white);
        }
      }
    }
  }
}
